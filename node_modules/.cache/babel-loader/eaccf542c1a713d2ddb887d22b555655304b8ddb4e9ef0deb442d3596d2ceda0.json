{"ast":null,"code":"var _jsxFileName = \"/home/zahra/redux/src/components/userList.jsx\";\nimport React, { useEffect, Component } from 'react';\nimport { getAllProduct } from '../stateManagement/actions/productActions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nuseEffect(() => {\n  // Update the document title using the browser API\n  props.getAll();\n});\nconst userList = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"userList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), props.isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"is Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 27\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"UserList\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: props.users.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n//mapStateToProps => وصل کردن استیت داخل استور به یک پراپرتی  و خواندن اطلاعات\nfunction mapStateToProps(state) {\n  return {\n    users: state.userState.items,\n    isLoading: state.userState.isLoading,\n    message: state.userState.message\n  };\n}\n\n//برای نوشتن و تغییر در ریداکس\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAll: id => getAllProduct(dispatch)\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(userList);","map":{"version":3,"names":["React","useEffect","Component","getAllProduct","connect","jsxDEV","_jsxDEV","props","getAll","userList","children","fileName","_jsxFileName","lineNumber","columnNumber","isLoading","className","users","map","item","id","name","username","mapStateToProps","state","userState","items","message","mapDispatchToProps","dispatch"],"sources":["/home/zahra/redux/src/components/userList.jsx"],"sourcesContent":["import React, {useEffect, Component } from 'react'\nimport { getAllProduct } from '../stateManagement/actions/productActions'\nimport { connect } from 'react-redux'\n\n\nuseEffect(() => {\n    // Update the document title using the browser API\n    props.getAll();\n  });\n\nconst userList = (props) => {\n\n  return (\n    <div>\n      <h1>userList</h1>\n      {\n        props.isLoading ? <div>is Loading... </div> : null\n      }\n      <table className=\"table table-striped table-bordered\">\n        <thead>\n          <tr>\n            <th>Id</th> \n            <th>UserList</th>\n            <th>Price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.users.map((item) => (\n            <tr key={item.id}>\n              <td>{item.id}</td>\n              <td>{item.name}</td>\n              <td>{item.username}</td>\n            </tr>\n          ))}\n\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\n\n\n\n//mapStateToProps => وصل کردن استیت داخل استور به یک پراپرتی  و خواندن اطلاعات\nfunction mapStateToProps (state) {\n  return{\n    users: state.userState.items,\n    isLoading: state.userState.isLoading,\n    message: state.userState.message,\n  };\n}\n\n\n//برای نوشتن و تغییر در ریداکس\nconst mapDispatchToProps = dispatch => {\n  return{\n    getAll: (id) => getAllProduct(dispatch),\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(userList);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,2CAA2C;AACzE,SAASC,OAAO,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGrCL,SAAS,CAAC,MAAM;EACZ;EACAM,KAAK,CAACC,MAAM,EAAE;AAChB,CAAC,CAAC;AAEJ,MAAMC,QAAQ,GAAIF,KAAK,IAAK;EAE1B,oBACED,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MAAAI,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAEfP,KAAK,CAACQ,SAAS,gBAAGT,OAAA;MAAAI,QAAA,EAAK;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,GAAG,IAAI,eAEpDR,OAAA;MAAOU,SAAS,EAAC,oCAAoC;MAAAN,QAAA,gBACnDJ,OAAA;QAAAI,QAAA,eACEJ,OAAA;UAAAI,QAAA,gBACEJ,OAAA;YAAAI,QAAA,EAAI;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eACXR,OAAA;YAAAI,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eACjBR,OAAA;YAAAI,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACX;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACC,eACRR,OAAA;QAAAI,QAAA,EACGH,KAAK,CAACU,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACpBb,OAAA;UAAAI,QAAA,gBACEJ,OAAA;YAAAI,QAAA,EAAKS,IAAI,CAACC;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eAClBR,OAAA;YAAAI,QAAA,EAAKS,IAAI,CAACE;UAAI;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACpBR,OAAA;YAAAI,QAAA,EAAKS,IAAI,CAACG;UAAQ;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM;QAAA,GAHjBK,IAAI,CAACC,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAKjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV,CAAC;;AAKD;AACA,SAASS,eAAeA,CAAEC,KAAK,EAAE;EAC/B,OAAM;IACJP,KAAK,EAAEO,KAAK,CAACC,SAAS,CAACC,KAAK;IAC5BX,SAAS,EAAES,KAAK,CAACC,SAAS,CAACV,SAAS;IACpCY,OAAO,EAAEH,KAAK,CAACC,SAAS,CAACE;EAC3B,CAAC;AACH;;AAGA;AACA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;EACrC,OAAM;IACJrB,MAAM,EAAGY,EAAE,IAAKjB,aAAa,CAAC0B,QAAQ;EACxC,CAAC;AACH,CAAC;AAED,eAAezB,OAAO,CAACmB,eAAe,EAACK,kBAAkB,CAAC,CAACnB,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}