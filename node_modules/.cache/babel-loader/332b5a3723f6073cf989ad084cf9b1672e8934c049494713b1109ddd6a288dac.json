{"ast":null,"code":"import { ProductAdd, ProductGetById, ProductRemove, ProductGetAll } from \"../actions/actionType\";\nconst initialState = {\n  items: [{\n    id: 1,\n    reduxName: \" Product 1\",\n    price: 100\n  }, {\n    id: 2,\n    reduxName: \" Product 2\",\n    price: 200\n  }, {\n    id: 3,\n    reduxName: \" Product 3\",\n    price: 300\n  }],\n  isLoading: true\n};\nfunction productReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ProductGetAll:\n      return {\n        ...state,\n        item: state.items\n      };\n    case ProductGetById:\n      return {\n        ...state,\n        item: state.items.find(query => query.id === action.Payload)\n      };\n    case ProductAdd:\n      return {\n        ...state,\n        item: state.items.concat([action.payload])\n      };\n    case ProductRemove:\n      return {\n        ...state,\n        item: state.items.filter(query => query.id != action.payload)\n      };\n    default:\n      return state;\n  }\n}\nexport default productReducer;","map":{"version":3,"names":["ProductAdd","ProductGetById","ProductRemove","ProductGetAll","initialState","items","id","reduxName","price","isLoading","productReducer","state","arguments","length","undefined","action","type","item","find","query","Payload","concat","payload","filter"],"sources":["/home/zahra/redux/src/stateManagement/reducers/productReducer.jsx"],"sourcesContent":["import { ProductAdd, ProductGetById, ProductRemove, ProductGetAll } from \"../actions/actionType\"\n\n\nconst initialState = {\n    items: [\n        {id:1, reduxName: \" Product 1\", price: 100},\n        {id:2, reduxName: \" Product 2\", price: 200},\n        {id:3, reduxName: \" Product 3\", price: 300},\n\n    ],\n    isLoading: true,\n};  \n\nfunction productReducer(state= initialState, action) {\n    switch (action.type) {\n\n\n        case ProductGetAll:\n            return {...state , item: state.items};\n\n\n        case ProductGetById:\n            return {...state , item:state.items.find((query) => query.id === action.Payload)};\n\n\n        case ProductAdd:\n            return {...state , item: state.items.concat([action.payload])};\n\n\n        case ProductRemove:\n            return {...state , item: state.items.filter((query) => query.id != action.payload)};\n        default:\n            return state;\n    }\n}\n\n\nexport default productReducer;"],"mappings":"AAAA,SAASA,UAAU,EAAEC,cAAc,EAAEC,aAAa,EAAEC,aAAa,QAAQ,uBAAuB;AAGhG,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,CACH;IAACC,EAAE,EAAC,CAAC;IAAEC,SAAS,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC3C;IAACF,EAAE,EAAC,CAAC;IAAEC,SAAS,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC3C;IAACF,EAAE,EAAC,CAAC;IAAEC,SAAS,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAG,CAAC,CAE9C;EACDC,SAAS,EAAE;AACf,CAAC;AAED,SAASC,cAAcA,CAAA,EAA8B;EAAA,IAA7BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAER,YAAY;EAAA,IAAEW,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C,QAAQC,MAAM,CAACC,IAAI;IAGf,KAAKb,aAAa;MACd,OAAO;QAAC,GAAGQ,KAAK;QAAGM,IAAI,EAAEN,KAAK,CAACN;MAAK,CAAC;IAGzC,KAAKJ,cAAc;MACf,OAAO;QAAC,GAAGU,KAAK;QAAGM,IAAI,EAACN,KAAK,CAACN,KAAK,CAACa,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACb,EAAE,KAAKS,MAAM,CAACK,OAAO;MAAC,CAAC;IAGrF,KAAKpB,UAAU;MACX,OAAO;QAAC,GAAGW,KAAK;QAAGM,IAAI,EAAEN,KAAK,CAACN,KAAK,CAACgB,MAAM,CAAC,CAACN,MAAM,CAACO,OAAO,CAAC;MAAC,CAAC;IAGlE,KAAKpB,aAAa;MACd,OAAO;QAAC,GAAGS,KAAK;QAAGM,IAAI,EAAEN,KAAK,CAACN,KAAK,CAACkB,MAAM,CAAEJ,KAAK,IAAKA,KAAK,CAACb,EAAE,IAAIS,MAAM,CAACO,OAAO;MAAC,CAAC;IACvF;MACI,OAAOX,KAAK;EAAC;AAEzB;AAGA,eAAeD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}